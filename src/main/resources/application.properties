spring.application.name=currency-exchange-service
spring.config.import=optional:configserver:http://localhost:8888
server.port=8000

#To register itself on namig server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#refer CircuitBreakerController.java > sampleApi() method
#maxRetryAtempts = total number of retry on same url request will execute until no error is retrieved.
#waitDuration = waiting time between each retry request.
#enableExponentialBackoff = waiting time between increased exponentially 
# Eg. 1s for 1st retry, 2s for 2nd retry, 4s for 3rd retry, 6s for 4th retry etc.
#maxRetryAttempts is old and maxAttempts is new.
resilience4j.retry.instances.sample-api.maxRetryAttempts=5
resilience4j.retry.instances.sample-api.waitDuration=1s
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

#When 90% of request fail, then circuitbreaker will switch to OPEN state. By default value is 50%.
resilience4j.circuitbreaker.instances.default.failureRateThreshold=90

#It means allow 2 request in every 10seconds.
#If requests crosses this limit then resilience4j will throw : RateLimiter 'default' does not permit further calls exception 
resilience4j.ratelimiter.instances.sample-api-3.limitForPeriod=2
resilience4j.ratelimiter.instances.sample-api-3.limitRefreshPeriod=10s

#It means allow maximum of 10 concurrent calls.
resilience4j.bulkhead.instances.sample-api-4.maxConcurrentCalls=10

#Tracing some sample of request like 10% or 20% etc. so that there will no load on server for tracing each and every request.
#0.05 = 5%
#1.0 = 100%
spring.sleuth.sampler.probability=1.0